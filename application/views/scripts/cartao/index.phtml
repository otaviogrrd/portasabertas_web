<?php
$auth = Zend_Auth::getInstance ();
$login = $auth->getIdentity();
$permissoes=array(1,2,4);
if($auth->hasIdentity() && in_array($login->nivel,$permissoes)){?>

<?php 
$this->headScript()
	->appendFile($this->baseUrl() . '/js/jquery/js/jquery-1.5.1.min.js','text/javascript')
	->appendFile($this->baseUrl() . '/js/jquery/js/jquery-ui-1.8.14.custom.min.js','text/javascript')
	->appendFile($this->baseUrl() . '/js/zxing.js','text/javascript');
	
$this->headLink()
	->appendStylesheet($this->baseUrl() . '/js/jquery/css/custom-theme/jquery-ui-1.8.14.custom.css');

	
$this->headScript()->captureStart();
?>
 <style type="text/css" media="screen">
     .cartaoDenario{
        background-color: green;
     }
     .cartaoChurrasco{
        background-color: #eca1a1;
	 }
 </style>
 <div class="tituloPag">Cartões</div>


<br>
<br>

<form id="myForm" action="<?php $this->url(array("controller"=>"cartao","action"=>"index")) ?>" method="get">
<h2>Informe número do cartão, documento ou nome do portador:</h2>

<img height=40 align="middle" src='/img/open_scan.JPG' id="barcode_button1" onclick="showScanner()"></img>
<img height=40 align="middle" src='/img/close_scan.JPG' id="barcode_button2" onclick="stopScanning()"></img>
<br/>
  <div id="select" class="select">
    <label for="videoSource">Câmera: </label><select id="videoSource"></select>
	<br/>
    <video muted autoplay id="video" playsinline="true"></video>
	<br/>
    <canvas id="pcCanvas" width="640" height="480" style="display: none; float: bottom;"></canvas>
    <canvas id="mobileCanvas" width="240" height="320" style="display: none; float: bottom;"></canvas>
  </div>
<input class="buscar" id="busca" type="text" name="busca" autocomplete="off"> 

<script>	
				
var button1 = document.getElementById("barcode_button1");
var button2 = document.getElementById("barcode_button2");
var select = document.getElementById("select");
	button2.style.display =  "none";
	select.style.display =  "none";
	
var videoElement = document.querySelector('video');
var canvas = document.getElementById('pcCanvas');
var mobileCanvas = document.getElementById('mobileCanvas');
var ctx = canvas.getContext('2d');
var mobileCtx = mobileCanvas.getContext('2d');
var videoSelect = document.querySelector('select#videoSource');
var barcode_result = document.getElementById('busca');

var isScanning = false;
var videoWidth = 640;
var videoHeight = 480;
var mobileVideoWidth = 240, mobileVideoHeight = 320;
var isPC = true;

var ZXing = null;
var decodePtr = null;

var tick = function () {
  if (window.ZXing) {
    ZXing = ZXing();
    decodePtr = ZXing.Runtime.addFunction(decodeCallback);
  } else {
    setTimeout(tick, 10);
  }
};
tick();

var decodeCallback = function (ptr, len, resultIndex, resultCount) {
  var result = new Uint8Array(ZXing.HEAPU8.buffer, ptr, len);
  console.log(String.fromCharCode.apply(null, result));
  console.log(barcode_result);
  barcode_result.value = String.fromCharCode.apply(null, result);  
  document.getElementById("myForm").submit();
};

// check devices
function browserRedirect() {
  var deviceType;
  var sUserAgent = navigator.userAgent.toLowerCase();
  var bIsIpad = sUserAgent.match(/ipad/i) == "ipad";
  var bIsIphoneOs = sUserAgent.match(/iphone os/i) == "iphone os";
  var bIsMidp = sUserAgent.match(/midp/i) == "midp";
  var bIsUc7 = sUserAgent.match(/rv:1.2.3.4/i) == "rv:1.2.3.4";
  var bIsUc = sUserAgent.match(/ucweb/i) == "ucweb";
  var bIsAndroid = sUserAgent.match(/android/i) == "android";
  var bIsCE = sUserAgent.match(/windows ce/i) == "windows ce";
  var bIsWM = sUserAgent.match(/windows mobile/i) == "windows mobile";
  if (bIsIpad || bIsIphoneOs || bIsMidp || bIsUc7 || bIsUc || bIsAndroid || bIsCE || bIsWM) {
    deviceType = 'phone';
  } else {
    deviceType = 'pc';
  }
  return deviceType;
}

if (browserRedirect() == 'pc') {
  isPC = true;
} else {
  isPC = false;
}

// stackoverflow: http://stackoverflow.com/questions/4998908/convert-data-uri-to-file-then-append-to-formdata/5100158
function dataURItoBlob(dataURI) {
  // convert base64/URLEncoded data component to raw binary data held in a string
  var byteString;
  if (dataURI.split(',')[0].indexOf('base64') >= 0)
    byteString = atob(dataURI.split(',')[1]);
  else
    byteString = unescape(dataURI.split(',')[1]);

  // separate out the mime component
  var mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0];

  // write the bytes of the string to a typed array
  var ia = new Uint8Array(byteString.length);
  for (var i = 0; i < byteString.length; i++) {
    ia[i] = byteString.charCodeAt(i);
  }

  return new Blob([ia], {
    type: mimeString
  });
}


// scan barcode
function scanBarcode() {
  barcode_result.textContent = "";

  if (ZXing == null) {
    alert("Erro ao iniciar Leitor!");
    return;
  }

  var data = null,
    context = null,
    width = 640,
    height = 480,
    dbrCanvas = null;

  if (isPC) {
    context = ctx;
    width = videoWidth;
    height = videoHeight;
    dbrCanvas = canvas;
  } else {
    context = mobileCtx;
    width = mobileVideoWidth;
    height = mobileVideoHeight;
    dbrCanvas = mobileCanvas;
  }

  context.drawImage(videoElement, 0, 0, width, height);

  var vid = document.getElementById("video");
  //console.log("video width: " + vid.videoWidth + ", height: " + vid.videoHeight);
  var barcodeCanvas = document.createElement("canvas");
  barcodeCanvas.width = vid.videoWidth;
  barcodeCanvas.height = vid.videoHeight;
  var barcodeContext = barcodeCanvas.getContext('2d');
  var imageWidth = vid.videoWidth, imageHeight = vid.videoHeight;
  barcodeContext.drawImage(videoElement, 0, 0, imageWidth, imageHeight);
  if (vid.videoWidth == 0){
	  if (isScanning){
		setTimeout(scanBarcode, 100);
		return;
	  }
  }
  // read barcode
  var imageData = barcodeContext.getImageData(0, 0, imageWidth, imageHeight);
  var idd = imageData.data;
  var image = ZXing._resize(imageWidth, imageHeight);
  console.time("decode barcode");
  for (var i = 0, j = 0; i < idd.length; i += 4, j++) {
    ZXing.HEAPU8[image + j] = idd[i];
  }
  var err = ZXing._decode_any(decodePtr);
  console.timeEnd('decode barcode');
  console.log("error code", err);
  if (err == -2) {
	  if (isScanning){
		setTimeout(scanBarcode, 100);
	  }
  }
}
// https://github.com/samdutton/simpl/tree/gh-pages/getusermedia/sources 
var videoSelect = document.querySelector('select#videoSource');

function showScanner() {	
	button2.style.display =  "block";
	select.style.display =  "block";
	button1.style.display =  "none";
	
	navigator.mediaDevices.enumerateDevices()
		.then(gotDevices).then(getStream).catch(handleError);  
  
  setTimeout(function(){	  
  
	  if (isPC) {
		canvas.style.display = 'none';
	  } else {
		mobileCanvas.style.display = 'none';
	  }
	  isScanning = true;
	  scanBarcode();
	}, 1000);
}

videoSelect.onchange = getStream;

function gotDevices(deviceInfos) {
  while (videoSelect.firstChild) {
    videoSelect.removeChild(videoSelect.firstChild);
  }
  for (var i = deviceInfos.length - 1; i >= 0; --i) {
    var deviceInfo = deviceInfos[i];
    var option = document.createElement('option');
    option.value = deviceInfo.deviceId;
    if (deviceInfo.kind === 'videoinput') {
      option.text = deviceInfo.label || 'camera ' +
        (videoSelect.length + 1);
      videoSelect.appendChild(option);
    } else {455
      //console.log('Found one other kind of source/device: ', deviceInfo);
    }
  }
}
function stopScanning() {	
	button1.style.display =  "block";
	button2.style.display =  "none";
	select.style.display =  "none";
	isScanning = false;
	if (window.stream) {
		window.stream.getTracks().forEach(function(track) {
		  track.stop();
		});
	}
}

function getStream() {
  if (window.stream) {
    window.stream.getTracks().forEach(function(track) {
      track.stop();
    });
  }

  var constraints = {
    video: {
      deviceId: {exact: videoSelect.value}
    }
  };

  navigator.mediaDevices.getUserMedia(constraints).
    then(gotStream).catch(handleError);
}

function gotStream(stream) {
  window.stream = stream; // make stream available to console
  videoElement.srcObject = stream;
}

function handleError(error) {
  console.log('Erro: ', error);
}
$(function () {
    $("#busca").focus();
});
</script>

<input class="input-pp" type="submit" value="Buscar">
<div class='cartaoDenario'><h2 style='color:black'> Os cartões com crédito em denário, aparecem destacados em cor verde, como esse texto.</h2></div>
 

</form>
 
<div class="clearfix"><?php echo $this->mensagem  ?>
<?php 
if (isset($_SESSION['ALERTA']) && is_array($_SESSION['ALERTA']))
	foreach ($_SESSION['ALERTA'] as $alerta){
		echo "<h3>{$alerta}</h3><br>";
	}
	unset($_SESSION['ALERTA']);
?></div>
<div id="conteudo_tabela" class="#conteudo_centro">
<br>

 <?php

    if(isset($this->paginator) && count($this->paginator) > 0){
    
    ?>
<table style="width: 950px">
    <thead>
        <tr>
            <th class="rounded-company" style="width: 100px">Número</th>
            <?php if(isset($_REQUEST['busca']) && $_REQUEST['busca']){?>
            <th class="rounded-company" style="width: 100px">Saldo</th>
            <?php }?>
            <th class="rounded-company" style="width: 150px">Portador</th>
            <th class="rounded-company" style="width: 150px">Documento</th>
            <th class="rounded-company" style="width: 100px">Situação</th>
            <th class="rounded-company" style="width: 300px">Ações</th>
            <th class="rounded-company" style="width: 200px">Relatórios</th>
        </tr>
    </thead>
    <tbody>
   
        <?php
		$status=array(0=>'Disponivel', 1 => 'Em uso',2 => 'Desativado');
        foreach($this->paginator as $key): ?>

        <tr class='<?php echo ( $key['tp_cartao'] == 1 && $key['creditos'] < 0 )? 'cartaoChurrasco' : (($key['tem_denario'])?'cartaoDenario':'');?>'>
            <td class="listar-simples"><?php echo $key['id_cartao']?></td>
            <?php if(isset($_REQUEST['busca']) && $_REQUEST['busca']){?>
            <td class="listar-simples">R$ <?php printf("%.2f",$key['creditos']); ?></td>
            <?php }?>
            <td class="listar-simples"><?php echo $key['descricao']; ?></td>
            <td class="listar-simples"><?php echo $key['documento']; ?></td>
            <td class="listar-simples"><?php echo $status[$key['status']]; ?></td>
        <td class="listar-simples">
        	<?php if ($key['status'] ==1) {
        			#cartao ativo e em uso /relatorios/transacoes?filtro=12345678
            echo '<a href="' . $this->url(array('action'=>'inserircredito','controller'=>'Cartao','id_cartao'=>$key['id_cartao']),null,1).'">Inserir  </a>';
            if( $key['creditos'] > 0 ){
              echo '<a href="' . $this->url(array('action'=>'estorno','controller'=>'Cartao','id_cartao'=>$key['id_cartao']),null,1) .'"> | Estornar</a>';
              echo '<br/><a href="' . $this->url(array('action'=>'mesclar','controller'=>'Cartao','id_cartao'=>$key['id_cartao']),null,1) .'">  Transferir  </a>';
            }    
            if( $key['creditos'] >= 0 ){
              echo '<a href="' . $this->url(array('action'=>'desativar','controller'=>'Cartao','id_cartao'=>$key['id_cartao'],'s'=>$key['creditos']),null,1).'" onclick="return confirma_desativar(\''.$key['id_cartao'].'\',\''.$key['descricao'].'\',\''.$key['creditos'].'\');">  |  Desativar  </a>';
              echo '<br/><a href="' . $this->url(array('action'=>'substituir','controller'=>'Cartao','id_cartao'=>$key['id_cartao']),null,1) .'">Substituir</a>';
            }  
            echo "<br>";
            echo '<a href="' . $this->url(array('action'=>'vendasbarraca','controller'=>'relatorios','id_barracas'=>'0','id_cartao'=>$key['id_cartao']),null,1).'">Cancelar Vendas</a>';
            }  
            ?>
            </td>
        <td class="listar-simples">
        	<?php if ($key['status'] > 0) {
        			#cartao em uso ou desativado /relatorios/transacoes?filtro=12345678
        		 	echo '<a href="' . $this->url(array('action'=>'transacoesbarraca','controller'=>'relatorios','filtro'=>$key['id_cartao']),null,1).'">Vendas | </a>';
        		 	echo '<a href="' . $this->url(array('action'=>'receita','controller'=>'relatorios','filtro'=>$key['id_cartao']),null,1).'">Créditos</a>';
        			}            	 
            ?>
            </td>

        </tr>
        <?php endforeach; ?>
       
       
       
    
    </tbody>
  
</table>
<?php }
else {
	if (isset($this->paginationControl)){
		echo "<h1>Registro não encontrado</h1>";
		}	
}
   ?>
<br>

 <?php
if (isset($this->paginationControl)){
	echo $this->paginationControl($this->paginator, 'all', 'paginator_item.phtml');
	}
?>
</div>
<?php }?>