<?php
$auth = Zend_Auth::getInstance ();
$login = $auth->getIdentity();
$permissoes=array(1,2,4);
if($auth->hasIdentity() && in_array($login->nivel,$permissoes)){
	$this->headScript()
		->appendFile($this->baseUrl() . '/js/jquery/js/jquery-1.5.1.min.js','text/javascript')
		->appendFile($this->baseUrl() . '/js/jquery/js/jquery-ui-1.8.14.custom.min.js','text/javascript')
		->appendFile($this->baseUrl() . '/js/zxing.js','text/javascript');
		
	$this->headLink()
		->appendStylesheet($this->baseUrl() . '/js/jquery/css/custom-theme/jquery-ui-1.8.14.custom.css');
	
		
	$this->headScript()->captureStart();
	?>
	 <div class="tituloPag">Cartões</div>
<br>
<br>

<img height=40 align="middle" src='/img/open_scan.JPG' id="barcode_button1" onclick="showScanner()"></img>
<img height=40 align="middle" src='/img/close_scan.JPG' id="barcode_button2" onclick="stopScanning()"></img>
<br/>
  <div id="select" class="select">
    <label for="videoSource">Câmera: </label><select id="videoSource"></select>
	<br/>
    <video muted autoplay id="video" playsinline="true"></video>
	<br/>
    <canvas id="pcCanvas" width="640" height="480" style="display: none; float: bottom;"></canvas>
    <canvas id="mobileCanvas" width="240" height="320" style="display: none; float: bottom;"></canvas>
  </div>
  
	<h1>Associar Cartão</h1>
	<script>
	baseUrl = "<?php echo $this->baseUrl(); ?>";

	$(function () {
		var codigo_atual="";
		$("#id_cartao").focus();
		setInterval(function() {
			//verifica se o leitor substituiu o codigo sem mudar de campo(ipad)
			if($("#id_cartao").val() != codigo_atual){
				codigo_atual= $("#id_cartao").val();
				$("#id_cartao").trigger('change');
				//$('#alerta').html("<h3>&nbsp;</h3>");
				}			
				
				
			//Altera o id do status por nome
			if($("#situacao").val() == "0"){
				$("#situacao").val("Disponível")
				}
			if($("#situacao").val() == "1"){
				$("#situacao").val("Em uso")
				}
			if($("#situacao").val() == "2"){
				$("#situacao").val("Desativado")
				}
			if($("#situacao").val() == "Disponível" && $("#descricao").val() != 'DISPONIVEL' && $("#descricao").val() != '' && $("#sobrenome").val() != '' ){
				$("#submit").attr("disabled",false);
				}
			else{
				$("#submit").attr("disabled",true);				
				}
				
				if ($("#id_cartao").val() != ''){
					if ($("#descricao").val() === 'DISPONIVEL' || $("#descricao").val() === '')
						$('#descricao').css({'background-color': 'lightcoral'});
					else 
						$('#descricao').css({'background-color': ''});
						
									
					if ($("#sobrenome").val() === '')
						$('#sobrenome').css({'background-color': 'lightcoral'});
					else
						$('#sobrenome').css({'background-color': ''});			
				}
			}, 1200);
		$("#descricao").keyup(function () {
			var v_descricao= $("#descricao").val();
			$("#descricao").val(v_descricao.replace(/('|"|;|´|`)/,""));
		});
		$("#documento").keyup(function () {
			var v_documento= $("#documento").val();
			$("#documento").val(v_documento.replace(/('|"|;|´|`)/,""));
		});
		$("#id_cartao").change(function () {
			var id = $(this).val().replace(/\D/g,"");
			$('#descricao').val(" ");
			$('#documento').val(" ");
			$('#situacao').val(" ");
			$("#submit").attr("disabled",true);
			if (id.length > 7){
			  if (id.length > 8)
			  	id = id.substr(id.length - 9,8);
			  $("#id_cartao").val(id);
			  $.ajax({
				url: baseUrl + '/cartao/portador/id/' + id,
				dataType: 'json',
				async    : false,
			  	success: function(data) {
				  	$('#descricao').val(data[0].descricao);
			  		$('#situacao').val(data[0].status);
			    	//$('span#creditos').html(parseFloat(data[0].creditos).toFixed(2));
			    	//$(".item").find('input').val('');
			    	//alert('Load was performed.');
					}
				});
			}
			else{
				$('#descricao').val(" ");
				$("#situacao").val(" ");
				$('#documento').val(" ");
				$("#submit").attr("disabled",true);
				}
		});
		$("form").submit(function () {
			var	retorno = false;
			
			$("#submit").attr("disabled",true);
			retorno= confirma_ativacao($("#id_cartao").val(),$("#descricao").val());
			
			if (retorno===false)
				$("#submit").attr("disabled",retorno);
			//return false;
			return retorno;
		});
		});
	</script>
	<div ><?php echo $this->mensagem  ?></div>
		<table style="width: 950px">
	</table>
	<?php echo $this->form; 
	}?>
	<script>		
var button1 = document.getElementById("barcode_button1");
var button2 = document.getElementById("barcode_button2");
var select = document.getElementById("select");
	button2.style.display =  "none";
	select.style.display =  "none";
	
var videoElement = document.querySelector('video');
var canvas = document.getElementById('pcCanvas');
var mobileCanvas = document.getElementById('mobileCanvas');
var ctx = canvas.getContext('2d');
var mobileCtx = mobileCanvas.getContext('2d');
var videoSelect = document.querySelector('select#videoSource');
var barcode_result = document.getElementById('id_cartao');

var isScanning = false;
var videoWidth = 640;
var videoHeight = 480;
var mobileVideoWidth = 240, mobileVideoHeight = 320;
var isPC = true;

var ZXing = null;
var decodePtr = null;

var tick = function () {
  if (window.ZXing) {
    ZXing = ZXing();
    decodePtr = ZXing.Runtime.addFunction(decodeCallback);
  } else {
    setTimeout(tick, 10);
  }
};
tick();

var decodeCallback = function (ptr, len, resultIndex, resultCount) {
  var result = new Uint8Array(ZXing.HEAPU8.buffer, ptr, len);
  console.log(String.fromCharCode.apply(null, result));
  console.log(barcode_result);
  barcode_result.value = String.fromCharCode.apply(null, result);
  stopScanning();
};

// check devices
function browserRedirect() {
  var deviceType;
  var sUserAgent = navigator.userAgent.toLowerCase();
  var bIsIpad = sUserAgent.match(/ipad/i) == "ipad";
  var bIsIphoneOs = sUserAgent.match(/iphone os/i) == "iphone os";
  var bIsMidp = sUserAgent.match(/midp/i) == "midp";
  var bIsUc7 = sUserAgent.match(/rv:1.2.3.4/i) == "rv:1.2.3.4";
  var bIsUc = sUserAgent.match(/ucweb/i) == "ucweb";
  var bIsAndroid = sUserAgent.match(/android/i) == "android";
  var bIsCE = sUserAgent.match(/windows ce/i) == "windows ce";
  var bIsWM = sUserAgent.match(/windows mobile/i) == "windows mobile";
  if (bIsIpad || bIsIphoneOs || bIsMidp || bIsUc7 || bIsUc || bIsAndroid || bIsCE || bIsWM) {
    deviceType = 'phone';
  } else {
    deviceType = 'pc';
  }
  return deviceType;
}

if (browserRedirect() == 'pc') {
  isPC = true;
} else {
  isPC = false;
}

// stackoverflow: http://stackoverflow.com/questions/4998908/convert-data-uri-to-file-then-append-to-formdata/5100158
function dataURItoBlob(dataURI) {
  // convert base64/URLEncoded data component to raw binary data held in a string
  var byteString;
  if (dataURI.split(',')[0].indexOf('base64') >= 0)
    byteString = atob(dataURI.split(',')[1]);
  else
    byteString = unescape(dataURI.split(',')[1]);

  // separate out the mime component
  var mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0];

  // write the bytes of the string to a typed array
  var ia = new Uint8Array(byteString.length);
  for (var i = 0; i < byteString.length; i++) {
    ia[i] = byteString.charCodeAt(i);
  }

  return new Blob([ia], {
    type: mimeString
  });
}


// scan barcode
function scanBarcode() {
  barcode_result.textContent = "";

  if (ZXing == null) {
    alert("Erro ao iniciar Leitor!");
    return;
  }

  var data = null,
    context = null,
     width = 640, 
 height = 480,
    dbrCanvas = null;

  if (isPC) {
    context = ctx;
    width = videoWidth;
    height = videoHeight;
    dbrCanvas = canvas;
  } else {
    context = mobileCtx;
    width = mobileVideoWidth;
    height = mobileVideoHeight;
    dbrCanvas = mobileCanvas;
  }

  context.drawImage(videoElement, 0, 0, width, height);

  var vid = document.getElementById("video");
  //console.log("video width: " + vid.videoWidth + ", height: " + vid.videoHeight);
  var barcodeCanvas = document.createElement("canvas");
  barcodeCanvas.width = vid.videoWidth;
  barcodeCanvas.height = vid.videoHeight;
  var barcodeContext = barcodeCanvas.getContext('2d');
  var imageWidth = vid.videoWidth, imageHeight = vid.videoHeight;
  barcodeContext.drawImage(videoElement, 0, 0, imageWidth, imageHeight);
  if (vid.videoWidth == 0){
	  if (isScanning){
		setTimeout(scanBarcode, 100);
		return;
	  }
  }
  // read barcode
  var imageData = barcodeContext.getImageData(0, 0, imageWidth, imageHeight);
  var idd = imageData.data;
  var image = ZXing._resize(imageWidth, imageHeight);
  console.time("decode barcode");
  for (var i = 0, j = 0; i < idd.length; i += 4, j++) {
    ZXing.HEAPU8[image + j] = idd[i];
  }
  var err = ZXing._decode_any(decodePtr);
  console.timeEnd('decode barcode');
  console.log("error code", err);
  if (err == -2) {
	  if (isScanning){
		setTimeout(scanBarcode, 100);
	  }
  }
}
// https://github.com/samdutton/simpl/tree/gh-pages/getusermedia/sources 
var videoSelect = document.querySelector('select#videoSource');

function showScanner() {	
	button2.style.display =  "block";
	select.style.display =  "block";
	button1.style.display =  "none";
	
	navigator.mediaDevices.enumerateDevices()
		.then(gotDevices).then(getStream).catch(handleError);  
  
  setTimeout(function(){	  
  
	  if (isPC) {
		canvas.style.display = 'none';
	  } else {
		mobileCanvas.style.display = 'none';
	  }
	  isScanning = true;
	  scanBarcode();
	}, 1000);
}

videoSelect.onchange = getStream;

function gotDevices(deviceInfos) {
  while (videoSelect.firstChild) {
    videoSelect.removeChild(videoSelect.firstChild);
  }
  for (var i = deviceInfos.length - 1; i >= 0; --i) {
    var deviceInfo = deviceInfos[i];
    var option = document.createElement('option');
    option.value = deviceInfo.deviceId;
    if (deviceInfo.kind === 'videoinput') {
      option.text = deviceInfo.label || 'camera ' +
        (videoSelect.length + 1);
      videoSelect.appendChild(option);
    } else {
      //console.log('Found one other kind of source/device: ', deviceInfo);
    }
  }
}
function stopScanning() {	
	button1.style.display =  "block";
	button2.style.display =  "none";
	select.style.display =  "none";
	isScanning = false;
	if (window.stream) {
		window.stream.getTracks().forEach(function(track) {
		  track.stop();
		});
	}
}

function getStream() {
  if (window.stream) {
    window.stream.getTracks().forEach(function(track) {
      track.stop();
    });
  }

  var constraints = {
    video: {
      deviceId: {exact: videoSelect.value}
    }
  };

  navigator.mediaDevices.getUserMedia(constraints).
    then(gotStream).catch(handleError);
}

function gotStream(stream) {
  window.stream = stream; // make stream available to console
  videoElement.srcObject = stream;
}

function handleError(error) {
  console.log('Erro: ', error);
}
</script>

