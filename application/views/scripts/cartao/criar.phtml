<?php
$auth = Zend_Auth::getInstance ();
$login = $auth->getIdentity();
$permissoes=array(1,2,4);
if($auth->hasIdentity() && in_array($login->nivel,$permissoes)){
	$this->headScript()
		->appendFile($this->baseUrl() . '/js/jquery/js/jquery-1.5.1.min.js','text/javascript')
		->appendFile($this->baseUrl() . '/js/jquery/js/jquery-ui-1.8.14.custom.min.js','text/javascript')
		->appendFile($this->baseUrl() . '/js/scandit.js','text/javascript');
		
	$this->headLink()
		->appendStylesheet($this->baseUrl() . '/js/jquery/css/custom-theme/jquery-ui-1.8.14.custom.css');
	
		
	$this->headScript()->captureStart();
	?>
	 <div class="tituloPag">Cartões</div>
<br>
<br>

<button type="button" onclick="showScanner()">  
<svg xmlns="http://www.w3.org/2000/svg" width="60" height="40" viewBox="0 0 127 127"><g fill="none" fill-rule="evenodd"><g class="base" fill="#000000"><g transform="translate(16 70)"><polygon points="26 37 43 37 43 0 26 0"/><polygon points="85 37 94 37 94 0 85 0"/><polygon points="0 37 9 37 9 0 0 0"/><polygon points="11 37 20 37 20 0 11 0"/><polygon points="74 37 83 37 83 0 74 0"/><polygon points="63 37 72 37 72 0 63 0"/><polygon points="46 37 55 37 55 0 46 0"/></g><g transform="translate(16 20)"><polygon points="26 37 43 37 43 0 26 0"/><polygon points="85 37 94 37 94 0 85 0"/><polygon points="0 37 9 37 9 0 0 0"/><polygon points="11 37 20 37 20 0 11 0"/><polygon points="74 37 83 37 83 0 74 0"/><polygon points="63 37 72 37 72 0 63 0"/><polygon points="46 37 55 37 55 0 46 0"/></g><g fill-rule="nonzero"><polygon points="126 0 94 0 94 3.693 122.307 3.693 122.307 32 126 32"/><polygon points="3.693 3.693 32 3.693 32 0 0 0 0 32 3.693 32"/><polygon points="122.307 123.307 94 123.307 94 127 126 127 126 95 122.307 95"/><polygon points="0 127 32 127 32 123.307 3.693 123.307 3.693 95 0 95"/></g></g><polygon class="scanline" fill="#2EC1CE" fill-rule="nonzero" points="0 62 0 65 127 65 127 62"/></g></svg>
</button>
<div id="scandit-barcode-picker"></div>

	<h1>Associar Cartão</h1>
	<script>
	baseUrl = "<?php echo $this->baseUrl(); ?>";
	$(function () {
		var codigo_atual="";
		$("#id_cartao").focus();
		setInterval(function() {
			//verifica se o leitor substituiu o codigo sem mudar de campo(ipad)
			if($("#id_cartao").val() != codigo_atual){
				codigo_atual= $("#id_cartao").val();
				$("#id_cartao").trigger('change');
				//$('#alerta').html("<h3>&nbsp;</h3>");
				}
			//Altera o id do status por nome
			if($("#situacao").val() == "0"){
				$("#situacao").val("Disponível")
				}
			if($("#situacao").val() == "1"){
				$("#situacao").val("Em uso")
				}
			if($("#situacao").val() == "2"){
				$("#situacao").val("Desativado")
				}
			if($("#situacao").val() == "Disponível" && $("#descricao").val() != 'DISPONIVEL' && $("#descricao").val().match(/\S+\s\S+/)){
				$("#submit").attr("disabled",false);
				}
			else{
				$("#submit").attr("disabled",true);
				}
			}, 1200);
		$("#descricao").keyup(function () {
			var v_descricao= $("#descricao").val();
			$("#descricao").val(v_descricao.replace(/('|"|;|´|`)/,""));
		});
		$("#documento").keyup(function () {
			var v_documento= $("#documento").val();
			$("#documento").val(v_documento.replace(/('|"|;|´|`)/,""));
		});
		$("#id_cartao").change(function () {
			var id = $(this).val().replace(/\D/g,"");
			$('#descricao').val(" ");
			$('#documento').val(" ");
			$('#situacao').val(" ");
			$("#submit").attr("disabled",true);
			if (id.length > 7){
			  if (id.length > 8)
			  	id = id.substr(id.length - 9,8);
			  $("#id_cartao").val(id);
			  $.ajax({
				url: baseUrl + '/cartao/portador/id/' + id,
				dataType: 'json',
				async    : false,
			  	success: function(data) {
				  	$('#descricao').val(data[0].descricao);
			  		$('#situacao').val(data[0].status);
			    	//$('span#creditos').html(parseFloat(data[0].creditos).toFixed(2));
			    	//$(".item").find('input').val('');
			    	//alert('Load was performed.');
					}
				});
			}
			else{
				$('#descricao').val(" ");
				$("#situacao").val(" ");
				$('#documento').val(" ");
				$("#submit").attr("disabled",true);
				}
		});
		$("form").submit(function () {
			var	retorno = false;
			
			$("#submit").attr("disabled",true);
			retorno= confirma_ativacao($("#id_cartao").val(),$("#descricao").val());
			
			if (retorno===false)
				$("#submit").attr("disabled",retorno);
			//return false;
			return retorno;
		});
		});
	</script>
	<div ><?php echo $this->mensagem  ?></div>
		<table style="width: 950px">
	</table>
	<?php echo $this->form; 
	}?>
	<script>			
			
// Configure the library and activate it with a license key
const licenseKey = "AQe9jBn7BGJdQp37IRMc7htFawpGLLavtGjOzAFkdMoBZKL2l0512jhCrgFjbaqja00wK3ZN7LyLaqetvE5vBjlMpRapIzuGHXTusJBeptqlVrk0VAsapH9l7o2TX6Wp2y9Xudltd78qPZMRVDhE6NMEEzPLvIvTvKf0S2EGJUgPEWPUloAYAjyc5e7HtZ0O/f9sdB+ms2u2cLjk7IfSsQbDfNSBcJD4gyDMWpHDL7JJm0pdvn8RTf6n5mtZYJXdQYZnmuazsPBWRGJ8YOwS9QmoiOlYMZyC1p7fnyZWyPgk7dksSLOpe4A12GOx/o2wr5/j9Wjbxyzva3/rKUoEnVyh5FXPax7aK1CI165B3KoABLD/AjPtLfXBG0JXmwjEx7FEbICljNVTJPDgqq/BXa3iT/gqwSeDK9/uWisKhcGTfwiFt6Z5zwpz1Tz5r1L6fQfLsR1v/EJeZr0E5KBDxQyFYYQzJYutwEVZqpLnY1OqyfQqJCq3OdbayrjP0IWUP5r2E7rNny6A9heIxkLBUumzBGlFsO3La8+iYplI7+rdHYY3yG3Zp5XWccf2C1NACSAnZQ4KgUaOooxatOYwsXkfHeJeMYaw4+khfHQLOZlvKsa7FcLhQg6H+VlXINaumhOzoFpojrBUt1CkJCscUQFtx/COF4BeZXaM8pAlwa4SSma1ltkactaTnL36OlF0A9yV6h/ve59l6XE04Ks1xhxIfoFZOhzvaa9FdBY5Pxjli6Sx+TEkmZBY4mbQ4QVXm0Ea53YM1oiPHhbnRmIJFkFnFo96Wf46FtBLWMddddRBClPMhF3tS/dJ+xuZ8s8K7sgukhI=";
// Configure the engine location, as explained on http://docs.scandit.com/stable/web/index.html
const engineLocation = "https://cdn.jsdelivr.net/npm/scandit-sdk@4.x/build"
const scannerContainer = document.getElementById("scandit-barcode-picker");
scannerContainer.style.visibility =  "hidden";
scannerContainer.style.height =  "0";
let picker;	

const scanInput = document.getElementById("id_cartao");
// Create & start the picker
ScanditSDK.configure(licenseKey, { engineLocation: engineLocation });
ScanditSDK.BarcodePicker.create(scannerContainer)
	.then(barcodePicker => {
		picker = barcodePicker;
			// Create the settings object to be applied to the scanner
			const scanSettings = new ScanditSDK.ScanSettings({
				enabledSymbologies: ["upca"]
			});
			picker.applyScanSettings(scanSettings);
			picker.on("scan", scanResult => {
				stopScanning();
				scanInput.value = scanResult.barcodes[0].data.substring(4, 12);
			});
			picker.on("scanError", error => alert(error.message));
			picker.resumeScanning();
		})
		.catch(alert);
		
function showScanner() {	
		scannerContainer.style.visibility =  "visible";
		scannerContainer.style.height =  "initial";
		picker.resumeScanning();
}
function stopScanning() {
	if (picker) {
		picker.pauseScanning();
		scannerContainer.style.visibility =  "hidden";
		scannerContainer.style.height =  "0";
	}
}
</script>

